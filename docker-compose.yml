version: "3.11"
services:
  litellm:
    build:
      context: .
      args:
        target: runtime
    image: ghcr.io/berriai/litellm:main-stable
    #image: ghcr.io/berriai/litellm:main-v1.63.14-stable@sha256:8626149365791df1280f4079fb38532eed4828c048fe4eafec7358231c9c4ad6
    container_name: litellm
    #########################################
    ## Uncomment these lines to start proxy with a config.yaml file ##
    volumes:
      - ./my_proxy_config.yaml:/app/config.yaml
      - ./my_ai.py:/app/my_ai.py
      - ./docker/prod_entrypoint.sh:/app/docker/prod_entrypoint.sh
      - ./litellm:/app
    command:
      - "--config=/app/config.yaml"
    ##############################################
    ports:
      - "4000:4000" # Map the container port to the host, change the host port if necessary
    #environment:
    #    
    env_file:
      - .env # Load local .env file
    depends_on:
      - db  # Indicates that this service depends on the 'db' service, ensuring 'db' starts first
    networks:
      - ai_net
    #healthcheck:  # Defines the health check configuration for the container
    #  test: [ "CMD", "curl", "-f", "http://localhost:4000/health/liveliness || exit 1" ]  # Command to execute for health check
    #  interval: 30s  # Perform health check every 30 seconds
    #  timeout: 10s   # Health check command times out after 10 seconds
    #  retries: 3     # Retry up to 3 times if health check fails
    #  start_period: 40s  # Wait 40 seconds after container start before beginning health checks

 
  db:
    image: postgres:16
    container_name: litellm-postgres
    restart: always
    environment:
      POSTGRES_DB: litellm
      POSTGRES_USER: llmproxy
      POSTGRES_PASSWORD: dbPiIb72
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data  # Persists Postgres data across container restarts
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d litellm -U llmproxy"]
      interval: 1s
      timeout: 5s
      retries: 10
    networks:
      - ai_net
  
  prometheus:
    image: prom/prometheus
    container_name: litellm-prometheus
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=15d'
    restart: always
    networks:
      - ai_net

volumes:
  prometheus_data:
    driver: local
  postgres_data:
    name: litellm_postgres_data  # Named volume for Postgres data persistence

networks:
  ai_net:
    external: true
    name: ai_net

# ...rest of your docker-compose config if any
